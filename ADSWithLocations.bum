<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.core.machineFile org.eventb.core.configuration="org.eventb.core.fwd" org.eventb.texttools.text_lastmodified="1353616403810" org.eventb.texttools.text_representation="machine ADSWithLocations refines ADSReportingAndWarnings  sees ctxStatus ctxLocation&#10;&#10;variables incident ambulance hospital incidentEmergencyLevel incidentCapabilityRequirements ambulanceAllocation hospitalAllocation reducedResponseCounter&#10;          incidentStatus // NEW VARIABLES FOR THIS MODEL:&#10;          baseStation ambulanceBase baseLocation hospitalLocation&#10;          incidentLocation // THIS REFINEMENT ADDS THE NOTION OF LOCATIONS TO THE MODEL&#10;&#10;&#10;invariants&#10;  @incidentLocationType incidentLocation ∈ incident → LOCATION // every incident has to have a location&#10;  @baseStationType baseStation ⊆ BASE_STATION // base stations added to the system&#10;  @baseLocationType baseLocation ∈ baseStation ↣ LOCATION // every base station in the system needs a location&#10;  @ambulanceBaseType ambulanceBase ∈ ambulance → baseStation // each ambulance belongs to a location&#10;  @hospitalLocationType hospitalLocation ∈ hospital ↣ LOCATION // every hospital in the system needs a location&#10;  @ambulanceTypeCheck ambulance = dom(ambulanceBase)&#10;  /* obvious but helps with discharging proofs&#10;     NOTE &#9;baseLocation and hospitalLocation now mapped as total injective functions&#10;     to emphasize that two hospitals or stations cannot be at the same location */&#10;&#10;events&#10;  event INITIALISATION extends INITIALISATION&#10;    then&#10;      @act10 incidentLocation ≔ ∅&#10;      @act11 baseStation ≔ ∅&#10;      @act12 baseLocation ≔ ∅&#10;      @act13 ambulanceBase ≔ ∅&#10;      @act14 hospitalLocation ≔ ∅&#10;  end&#10;&#10;  event logIncident extends logIncident&#10;    any loc // extends the incident logging process by adding a location&#10;&#10;    where&#10;      @grd5 loc ∈ LOCATION&#10;    then&#10;      @act5 incidentLocation(i) ≔ loc&#10;  end&#10;&#10;  event fullResponseAllocation extends fullResponseAllocation&#10;    where&#10;      @grd7 i ∈ dom(incidentLocation) // obvious but helps with discharging&#10;      @grd8 a ∈ dom(ambulanceBase) // obvious but helps with discharging&#10;      @grd9 ∀amb·(amb ∈ ambulance ∖ dom(ambulanceAllocation)&#10;            ∧ incidentCapabilityRequirements(i) ⊆ ambulanceCapabilities(amb))&#10;            ⇒ distance(baseLocation(ambulanceBase(a))↦incidentLocation(i))&#10;            ≤ distance(baseLocation(ambulanceBase(amb))↦incidentLocation(i))&#10;      /* Make sure that of all the ambulances that could possibly provide a full response&#10;         to the selected incident the one that is located the closest gets selected */&#10;  end&#10;&#10;  event reducedResponseAllocation extends reducedResponseAllocation&#10;    where&#10;      @grd7 i ∈ dom(incidentLocation)&#10;      @grd8 ∀amb·(amb ∈ ambulance ∖ dom(ambulanceAllocation) ∧&#10;            card(incidentCapabilityRequirements(i)) ∗ MIN_REDUCED_RESPONSE_CAPABILITIES&#10;            ≤ card(incidentCapabilityRequirements(i) ∩ ambulanceCapabilities(amb)) ∗100)&#10;            ⇒ distance(baseLocation(ambulanceBase(a))↦incidentLocation(i))&#10;            ≤ distance(baseLocation(ambulanceBase(amb))↦incidentLocation(i))&#10;      /* Make sure that of all the ambulances that could possibly provide a reduced response&#10;         to the selected incident the one that is located the closest gets selected */&#10;  end&#10;&#10;  event allocateIncidentToHospital extends allocateIncidentToHospital&#10;    where&#10;      @grd3 ∀hosp · hosp ∈ hospital ⇒&#10;            distance(incidentLocation(i)↦hospitalLocation(h))&#10;            ≤ distance(incidentLocation(i)↦hospitalLocation(hosp)) // Make sure we select the closest hospital to the location of the incident&#10;  end&#10;&#10;  event REPORT_IncidentArrival extends REPORT_IncidentArrival&#10;  end&#10;&#10;  event REPORT_HospitalArrival extends REPORT_HospitalArrival&#10;  end&#10;&#10;  event REPORT_AmbulanceBackAtBase extends REPORT_AmbulanceBackAtBase&#10;  end&#10;&#10;  event WARNING_QueueThresholdReached // enabled when queue threshold reached&#10;  extends WARNING_QueueThresholdReached&#10;  end&#10;&#10;  event WARNING_ReducedResponseThresholdExceeded // enabled when reduced response threshold exceeded&#10;  extends WARNING_ReducedResponseThresholdExceeded&#10;  end&#10;&#10;  event addAmbulance extends addAmbulance&#10;    any bs // every ambulance now needs to be associated with a base station&#10;&#10;    where&#10;      @grd2 bs ∈ baseStation&#10;    then&#10;      @act2 ambulanceBase(a) ≔ bs&#10;  end&#10;&#10;  event addHospital extends addHospital&#10;    any loc&#10;    where&#10;      @grd2 loc ∈ LOCATION ∖ ran(hospitalLocation) // every hospital needs a unique location&#10;    then&#10;      @act2 hospitalLocation(h) ≔ loc&#10;  end&#10;&#10;  event addBaseStation&#10;    any b l&#10;    where&#10;      @grd1 b ∈ BASE_STATION ∖ baseStation // must be a new base station (not already on the system)&#10;      @grd2 l ∈ LOCATION ∖ ran(baseLocation) // every base station needs a unique location&#10;    then&#10;      @act1 baseStation ≔ baseStation ∪ {b}&#10;      @act2 baseLocation(b) ≔ l&#10;  end&#10;end&#10;" version="5">
<org.eventb.core.refinesMachine name="_ez9i0DTbEeKKgOWpxmXfPA" org.eventb.core.target="ADSReportingAndWarnings"/>
<org.eventb.core.seesContext name="_ez-J4DTbEeKKgOWpxmXfPA" org.eventb.core.target="ctxStatus"/>
<org.eventb.core.seesContext name="_ez-J4TTbEeKKgOWpxmXfPA" org.eventb.core.target="ctxLocation"/>
<org.eventb.core.variable name="_Tu9hQzDeEeK1r57p0SSIEg" org.eventb.core.identifier="incident"/>
<org.eventb.core.variable name="_Tu9hRDDeEeK1r57p0SSIEg" org.eventb.core.identifier="ambulance"/>
<org.eventb.core.variable name="_Tu9hRTDeEeK1r57p0SSIEg" org.eventb.core.identifier="hospital"/>
<org.eventb.core.variable name="_vRAtsDQjEeK2JagZ1s_v9g" org.eventb.core.identifier="incidentEmergencyLevel"/>
<org.eventb.core.variable name="_Tu-IUTDeEeK1r57p0SSIEg" org.eventb.core.identifier="incidentCapabilityRequirements"/>
<org.eventb.core.variable name="_Tu-IUjDeEeK1r57p0SSIEg" org.eventb.core.identifier="ambulanceAllocation"/>
<org.eventb.core.variable name="_Tu-IUzDeEeK1r57p0SSIEg" org.eventb.core.identifier="hospitalAllocation"/>
<org.eventb.core.variable name="_Tu-vYDDeEeK1r57p0SSIEg" org.eventb.core.identifier="reducedResponseCounter"/>
<org.eventb.core.variable name="_o18iEDDeEeK1r57p0SSIEg" org.eventb.core.comment="NEW VARIABLES FOR THIS MODEL:" org.eventb.core.identifier="incidentStatus"/>
<org.eventb.core.variable name="_4PaPIzM-EeKbDsKAzT_zSA" org.eventb.core.identifier="baseStation"/>
<org.eventb.core.variable name="_4PaPJDM-EeKbDsKAzT_zSA" org.eventb.core.identifier="ambulanceBase"/>
<org.eventb.core.variable name="_4PaPJTM-EeKbDsKAzT_zSA" org.eventb.core.identifier="baseLocation"/>
<org.eventb.core.variable name="_4PaPJjM-EeKbDsKAzT_zSA" org.eventb.core.identifier="hospitalLocation"/>
<org.eventb.core.variable name="_UoUUwDKXEeK15q5Rb42jMQ" org.eventb.core.comment="THIS REFINEMENT ADDS THE NOTION OF LOCATIONS TO THE MODEL" org.eventb.core.identifier="incidentLocation"/>
<org.eventb.core.invariant name="_IstAwDQrEeK4AKZX5m6UFA" org.eventb.core.comment="every incident has to have a location" org.eventb.core.label="incidentLocationType" org.eventb.core.predicate="incidentLocation ∈ incident → LOCATION"/>
<org.eventb.core.invariant name="_JaabUDQrEeK4AKZX5m6UFA" org.eventb.core.comment="base stations added to the system" org.eventb.core.label="baseStationType" org.eventb.core.predicate="baseStation ⊆ BASE_STATION"/>
<org.eventb.core.invariant name="_K2nTkDQrEeK4AKZX5m6UFA" org.eventb.core.comment="every base station in the system needs a location" org.eventb.core.label="baseLocationType" org.eventb.core.predicate="baseLocation ∈ baseStation ↣ LOCATION"/>
<org.eventb.core.invariant name="_cVx5IDQrEeK4AKZX5m6UFA" org.eventb.core.comment="each ambulance belongs to a location" org.eventb.core.label="ambulanceBaseType" org.eventb.core.predicate="ambulanceBase ∈ ambulance → baseStation"/>
<org.eventb.core.invariant name="_detQEDQrEeK4AKZX5m6UFA" org.eventb.core.comment="every hospital in the system needs a location" org.eventb.core.label="hospitalLocationType" org.eventb.core.predicate="hospitalLocation ∈ hospital ↣ LOCATION"/>
<org.eventb.core.invariant name="_6xhKwDSXEeKIHaPt6d5fNA" org.eventb.core.comment="obvious but helps with discharging proofs&#10;     NOTE &#9;baseLocation and hospitalLocation now mapped as total injective functions&#10;     to emphasize that two hospitals or stations cannot be at the same location " org.eventb.core.label="ambulanceTypeCheck" org.eventb.core.predicate="ambulance = dom(ambulanceBase)"/>
<org.eventb.core.event name="_o18iEDDeEeK1r57p0SSIEh" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="INITIALISATION">
<org.eventb.core.action name="_Hh7Q0DKYEeK15q5Rb42jMQ" org.eventb.core.assignment="incidentLocation ≔ ∅" org.eventb.core.label="act10"/>
<org.eventb.core.action name="_4PaPLDM-EeKbDsKAzT_zSA" org.eventb.core.assignment="baseStation ≔ ∅" org.eventb.core.label="act11"/>
<org.eventb.core.action name="_4PaPLTM-EeKbDsKAzT_zSA" org.eventb.core.assignment="baseLocation ≔ ∅" org.eventb.core.label="act12"/>
<org.eventb.core.action name="_4PaPLjM-EeKbDsKAzT_zSA" org.eventb.core.assignment="ambulanceBase ≔ ∅" org.eventb.core.label="act13"/>
<org.eventb.core.action name="_DyX8AzM_EeKbDsKAzT_zSA" org.eventb.core.assignment="hospitalLocation ≔ ∅" org.eventb.core.label="act14"/>
</org.eventb.core.event>
<org.eventb.core.event name="_o18iEDDeEeK1r57p0SSIEi" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="logIncident">
<org.eventb.core.refinesEvent name="_e0KXIDTbEeKKgOWpxmXfPA" org.eventb.core.target="logIncident"/>
<org.eventb.core.parameter name="_ZMxh8TKYEeK15q5Rb42jMQ" org.eventb.core.comment="extends the incident logging process by adding a location" org.eventb.core.identifier="loc"/>
<org.eventb.core.guard name="_ejkL0DTaEeKKgOWpxmXfPA" org.eventb.core.label="grd5" org.eventb.core.predicate="loc ∈ LOCATION"/>
<org.eventb.core.action name="_ZMxh8zKYEeK15q5Rb42jMQ" org.eventb.core.assignment="incidentLocation(i) ≔ loc" org.eventb.core.label="act5"/>
</org.eventb.core.event>
<org.eventb.core.event name="_o18iEDDeEeK1r57p0SSIEj" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="fullResponseAllocation">
<org.eventb.core.refinesEvent name="_e0MMUDTbEeKKgOWpxmXfPA" org.eventb.core.target="fullResponseAllocation"/>
<org.eventb.core.guard name="_hk8SIDTaEeKKgOWpxmXfPA" org.eventb.core.comment="obvious but helps with discharging" org.eventb.core.label="grd7" org.eventb.core.predicate="i ∈ dom(incidentLocation)"/>
<org.eventb.core.guard name="_hk85MDTaEeKKgOWpxmXfPA" org.eventb.core.comment="obvious but helps with discharging" org.eventb.core.label="grd8" org.eventb.core.predicate="a ∈ dom(ambulanceBase)"/>
<org.eventb.core.guard name="_hk9gQDTaEeKKgOWpxmXfPA" org.eventb.core.comment="Make sure that of all the ambulances that could possibly provide a full response&#10;         to the selected incident the one that is located the closest gets selected " org.eventb.core.label="grd9" org.eventb.core.predicate="∀amb·(amb ∈ ambulance ∖ dom(ambulanceAllocation)&#10;            ∧ incidentCapabilityRequirements(i) ⊆ ambulanceCapabilities(amb))&#10;            ⇒ distance(baseLocation(ambulanceBase(a))↦incidentLocation(i))&#10;            ≤ distance(baseLocation(ambulanceBase(amb))↦incidentLocation(i))"/>
</org.eventb.core.event>
<org.eventb.core.event name="_o18iEDDeEeK1r57p0SSIEk" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="reducedResponseAllocation">
<org.eventb.core.refinesEvent name="_e0PPoDTbEeKKgOWpxmXfPA" org.eventb.core.target="reducedResponseAllocation"/>
<org.eventb.core.guard name="_jnq-4TTaEeKKgOWpxmXfPA" org.eventb.core.label="grd7" org.eventb.core.predicate="i ∈ dom(incidentLocation)"/>
<org.eventb.core.guard name="_jnrl8DTaEeKKgOWpxmXfPA" org.eventb.core.comment="Make sure that of all the ambulances that could possibly provide a reduced response&#10;         to the selected incident the one that is located the closest gets selected " org.eventb.core.label="grd8" org.eventb.core.predicate="∀amb·(amb ∈ ambulance ∖ dom(ambulanceAllocation) ∧&#10;            card(incidentCapabilityRequirements(i)) ∗ MIN_REDUCED_RESPONSE_CAPABILITIES&#10;            ≤ card(incidentCapabilityRequirements(i) ∩ ambulanceCapabilities(amb)) ∗100)&#10;            ⇒ distance(baseLocation(ambulanceBase(a))↦incidentLocation(i))&#10;            ≤ distance(baseLocation(ambulanceBase(amb))↦incidentLocation(i))"/>
</org.eventb.core.event>
<org.eventb.core.event name="_o18iEDDeEeK1r57p0SSIEl" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="allocateIncidentToHospital">
<org.eventb.core.refinesEvent name="_e0SS8DTbEeKKgOWpxmXfPA" org.eventb.core.target="allocateIncidentToHospital"/>
<org.eventb.core.guard name="_pT2ekDTaEeKKgOWpxmXfPA" org.eventb.core.comment="Make sure we select the closest hospital to the location of the incident" org.eventb.core.label="grd3" org.eventb.core.predicate="∀hosp · hosp ∈ hospital ⇒&#10;            distance(incidentLocation(i)↦hospitalLocation(h))&#10;            ≤ distance(incidentLocation(i)↦hospitalLocation(hosp))"/>
</org.eventb.core.event>
<org.eventb.core.event name="_o18iEDDeEeK1r57p0SSIEm" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="REPORT_IncidentArrival">
<org.eventb.core.refinesEvent name="_e0UIIDTbEeKKgOWpxmXfPA" org.eventb.core.target="REPORT_IncidentArrival"/>
</org.eventb.core.event>
<org.eventb.core.event name="_o18iEDDeEeK1r57p0SSIEn" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="REPORT_HospitalArrival">
<org.eventb.core.refinesEvent name="_e0UvMDTbEeKKgOWpxmXfPA" org.eventb.core.target="REPORT_HospitalArrival"/>
</org.eventb.core.event>
<org.eventb.core.event name="_o18iEDDeEeK1r57p0SSIEo" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="REPORT_AmbulanceBackAtBase">
<org.eventb.core.refinesEvent name="_e0V9UDTbEeKKgOWpxmXfPA" org.eventb.core.target="REPORT_AmbulanceBackAtBase"/>
</org.eventb.core.event>
<org.eventb.core.event name="_o18iEDDeEeK1r57p0SSIEp" org.eventb.core.comment="enabled when queue threshold reached" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="WARNING_QueueThresholdReached">
<org.eventb.core.refinesEvent name="_e0WkYDTbEeKKgOWpxmXfPA" org.eventb.core.target="WARNING_QueueThresholdReached"/>
</org.eventb.core.event>
<org.eventb.core.event name="_o18iEDDeEeK1r57p0SSIEq" org.eventb.core.comment="enabled when reduced response threshold exceeded" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="WARNING_ReducedResponseThresholdExceeded">
<org.eventb.core.refinesEvent name="_e0XygDTbEeKKgOWpxmXfPA" org.eventb.core.target="WARNING_ReducedResponseThresholdExceeded"/>
</org.eventb.core.event>
<org.eventb.core.event name="_o18iEDDeEeK1r57p0SSIEr" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="addAmbulance">
<org.eventb.core.refinesEvent name="_e0YZkDTbEeKKgOWpxmXfPA" org.eventb.core.target="addAmbulance"/>
<org.eventb.core.parameter name="_4PjZGjM-EeKbDsKAzT_zSA" org.eventb.core.comment="every ambulance now needs to be associated with a base station" org.eventb.core.identifier="bs"/>
<org.eventb.core.guard name="_0ifhQDTaEeKKgOWpxmXfPA" org.eventb.core.label="grd2" org.eventb.core.predicate="bs ∈ baseStation"/>
<org.eventb.core.action name="_4PjZHDM-EeKbDsKAzT_zSA" org.eventb.core.assignment="ambulanceBase(a) ≔ bs" org.eventb.core.label="act2"/>
</org.eventb.core.event>
<org.eventb.core.event name="_o18iEDDeEeK1r57p0SSIEs" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="addHospital">
<org.eventb.core.refinesEvent name="_e0a10DTbEeKKgOWpxmXfPA" org.eventb.core.target="addHospital"/>
<org.eventb.core.parameter name="_4PjZHjM-EeKbDsKAzT_zSA" org.eventb.core.identifier="loc"/>
<org.eventb.core.guard name="_1ixSgDTaEeKKgOWpxmXfPA" org.eventb.core.comment="every hospital needs a unique location" org.eventb.core.label="grd2" org.eventb.core.predicate="loc ∈ LOCATION ∖ ran(hospitalLocation)"/>
<org.eventb.core.action name="_4PjZIDM-EeKbDsKAzT_zSA" org.eventb.core.assignment="hospitalLocation(h) ≔ loc" org.eventb.core.label="act2"/>
</org.eventb.core.event>
<org.eventb.core.event name="_4PjZITM-EeKbDsKAzT_zSA" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="addBaseStation">
<org.eventb.core.parameter name="_4PjZIjM-EeKbDsKAzT_zSA" org.eventb.core.identifier="b"/>
<org.eventb.core.parameter name="_4PjZIzM-EeKbDsKAzT_zSA" org.eventb.core.identifier="l"/>
<org.eventb.core.guard name="_3ygggDTaEeKKgOWpxmXfPA" org.eventb.core.comment="must be a new base station (not already on the system)" org.eventb.core.label="grd1" org.eventb.core.predicate="b ∈ BASE_STATION ∖ baseStation"/>
<org.eventb.core.guard name="_3yhHkDTaEeKKgOWpxmXfPA" org.eventb.core.comment="every base station needs a unique location" org.eventb.core.label="grd2" org.eventb.core.predicate="l ∈ LOCATION ∖ ran(baseLocation)"/>
<org.eventb.core.action name="_4PjZJjM-EeKbDsKAzT_zSA" org.eventb.core.assignment="baseStation ≔ baseStation ∪ {b}" org.eventb.core.label="act1"/>
<org.eventb.core.action name="_4PjZJzM-EeKbDsKAzT_zSA" org.eventb.core.assignment="baseLocation(b) ≔ l" org.eventb.core.label="act2"/>
</org.eventb.core.event>
</org.eventb.core.machineFile>
