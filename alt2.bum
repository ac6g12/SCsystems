<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.core.machineFile org.eventb.core.configuration="org.eventb.core.fwd" org.eventb.texttools.text_lastmodified="1353167974353" org.eventb.texttools.text_representation="machine alt2 refines alt1 sees ctxAmbulance ctxHospital&#10;&#10;variables incident ambulance hospital incidentLevel incidentCapabilityRequirements ambulanceAllocation hospitalAllocation&#10;&#9;&#9;   queueCounter reducedResponseCounter&#10;&#9;&#9;   // queueCounter and reducedResponseCounter to monitor the system state&#10;&#9;&#9;   // (workaround as using card() often causes problems with discharging proof obligations)&#10;&#9;&#9;   attendedIncident hospitalisedIncident&#10;&#9;&#9;   // lists of incidented which help monitor the status of allocated&#10;&#9;&#9;   // incidents --&gt; used for the REPORT events&#10;&#10;// THIS REFINED MACHINE IMPLEMENTS THE WARNING AND REPORTING REQUIREMENTS&#10;&#10;invariants&#10;  &#9;&#9;@inv8 &#9;queueCounter ∈ ℕ&#10;  &#9;&#9;@inv9&#9;reducedResponseCounter ∈ ℕ&#10;  &#9;&#9;@inv10 &#9;finite(incident)&#10;  &#9;&#9;@inv11&#9;attendedIncident ⊆ incident&#10;  &#9;&#9;@inv12&#9;hospitalisedIncident ⊆  attendedIncident  // cannot hospitalise before the scene is attended&#10;&#10;events&#10;  event INITIALISATION extends INITIALISATION&#10;  &#9;then&#10;&#9;&#9;@act8 &#9;queueCounter ≔ 0&#9;&#9;&#9;// counters init to zero&#10;&#9;&#9;@act9 &#9;reducedResponseCounter ≔ 0&#10;&#9;&#9;@act10&#9;attendedIncident ≔ ∅&#10;&#9;&#9;@act11&#9;hospitalisedIncident ≔ ∅&#10;  end&#10;&#10;  event logIncident extends logIncident&#10;  &#9;then&#10;&#9;&#9;@act4 &#9;queueCounter ≔  queueCounter + 1  // increment queue size when new incident logged&#10;  end&#10;&#10;  event fullResponseAllocation extends allocateAmbulanceToIncident&#10;  &#9;where&#10;  &#9;&#9;@grd6&#9;incidentCapabilityRequirements(i) ⊆ ambulanceCapabilities(a)&#10; &#9;&#9;@grd7&#9;queueCounter &gt; 0&#10;  &#9;then&#10;  &#9;&#9;@act2 &#9;queueCounter ≔  queueCounter − 1  // decrement queue size when logged incident is allocated&#10;  end&#10;&#10;  event reducedResponseAllocation extends allocateAmbulanceToIncident&#10;  &#9;where&#10;&#9;&#9;@grd6&#9;∀amb · (amb ∈ ambulance ∖ dom(ambulanceAllocation)&#10;  &#9;&#9;&#9;&#9;⇒ ∀inc · (inc ∈ allocatable&#10;  &#9;&#9;&#9;&#9;⇒ incidentCapabilityRequirements(inc) ⊈ ambulanceCapabilities(amb)))&#10;  &#9;&#9;&#9;&#9;// only enable if there are no ambulances that could provide a full&#10;  &#9;&#9;&#9;&#9;// response to any of the allocatable incidents&#10;//  &#9;@grd6&#9;incidentCapabilityRequirements(i) ⊈ ambulanceCapabilities(a)&#10;  &#9;&#9;@grd7&#9;queueCounter &gt; 0&#10;  &#9;then&#10;  &#9;&#9;@act2 &#9;queueCounter ≔  queueCounter − 1  // decrement queue size when logged incident is allocated&#10;  &#9;&#9;@act3&#9;reducedResponseCounter ≔  reducedResponseCounter + 1&#10;  &#9;&#9;&#9;&#9;// increment the reduced response counter&#10;  end&#10;&#10;  event allocateIncidentToHospital extends allocateIncidentToHospital&#10;  end&#10;&#10;  event REPORT_IncidentArrival&#10;  &#9;any a&#10;  &#9;where&#10;  &#9;&#9;@grd1 &#9;a ∈ dom(ambulanceAllocation)&#9;// must be an ambulance with an allocated incident&#10;  &#9;&#9;@grd2&#9;ambulanceAllocation(a) ∉ attendedIncident  // ... that hasn't arrived yet&#10;  &#9;then&#10;  &#9;&#9;@act1&#9;attendedIncident ≔  attendedIncident ∪ {ambulanceAllocation(a)}&#10;  &#9;&#9;&#9;&#9;// register arrival to the scene of the incident&#10;  end&#10;&#10;  event REPORT_HospitalArrival&#10;  &#9;any a&#10;  &#9;where&#13;&#9;&#9;@grd1 &#9;a ∈ dom(ambulanceAllocation)&#9;&#9;//&#9;must be a currently allocated ambulance&#10;&#9;&#9;@grd2 &#9;ambulanceAllocation(a) ∈ attendedIncident&#9;// cannot arrive before attending the incident scene&#10;&#9;&#9;@grd3 &#9;{a}◁(ambulanceAllocation;hospitalAllocation) ≠ ∅  // hospital must be allocated&#10; &#9;&#9;@grd4&#9;ambulanceAllocation(a) ∉ hospitalisedIncident  // not yet delivered to hospital&#10;    then&#10;    &#9;@act1&#9;hospitalisedIncident ≔ hospitalisedIncident ∪ {ambulanceAllocation(a)}&#10;    &#9;&#9;&#9;// register arrival to the allocated hospital&#10;  end&#10;&#10;  event REPORT_AmbulanceBackAtBase extends setAmbulanceAvailable&#10;  &#9;where&#10;  &#9;&#9;@grd3&#9;ambulanceAllocation(a) ∈ hospitalisedIncident&#10;  &#9;&#9;&#9;&#9;// ambulance can only arrive back at its base when it has delivered&#10;  &#9;&#9;&#9;&#9;// the patient (incident) to the allocated hospital&#10;  &#9;&#9;&#9;&#9;// Arrival to the base makes the ambulance available for another allocation&#10;  end&#10;&#10;  event WARNING_QueueThresholdReached  // enabled when queue threshold reached&#10;  &#9;where&#10;  &#9;&#9;@grd1&#9;queueCounter ≥ QUEUE_THRESHOLD&#10;  end&#10;&#10;  event WARNING_ReducedResponseThresholdExceeded  // enabled when reduced response threshold exceeded&#10;  &#9;where&#10;  &#9;&#9;@grd1&#9;(card(incident) − queueCounter) ∗ REDUCED_RESPONSE_PERCENTAGE_THRESHOLD&#10;  &#9;&#9;&#9;&#9;&lt; reducedResponseCounter ∗ 100&#10;  end&#10;&#10;  event addAmbulance extends addAmbulance&#10;  end&#10;&#10;  event addHospital extends addHospital&#10;  end&#10;end&#10;" version="5">
<org.eventb.core.refinesMachine name="_Zk-J0DDHEeK1r57p0SSIEg" org.eventb.core.target="alt1"/>
<org.eventb.core.seesContext name="_Zk-J0TDHEeK1r57p0SSIEg" org.eventb.core.target="ctxAmbulance"/>
<org.eventb.core.seesContext name="_Zk-J0jDHEeK1r57p0SSIEg" org.eventb.core.target="ctxHospital"/>
<org.eventb.core.variable name="_u68KojA_EeKxl_72wEg6Ag" org.eventb.core.identifier="incident"/>
<org.eventb.core.variable name="_u68KozA_EeKxl_72wEg6Ag" org.eventb.core.identifier="ambulance"/>
<org.eventb.core.variable name="_u68KpDA_EeKxl_72wEg6Ag" org.eventb.core.identifier="hospital"/>
<org.eventb.core.variable name="_u68KpTA_EeKxl_72wEg6Ag" org.eventb.core.identifier="incidentLevel"/>
<org.eventb.core.variable name="_u68KpjA_EeKxl_72wEg6Ag" org.eventb.core.identifier="incidentCapabilityRequirements"/>
<org.eventb.core.variable name="_u68KpzA_EeKxl_72wEg6Ag" org.eventb.core.identifier="ambulanceAllocation"/>
<org.eventb.core.variable name="_PxjRUDCuEeK1r57p0SSIEg" org.eventb.core.identifier="hospitalAllocation"/>
<org.eventb.core.variable name="_cGNMwDChEeK8I7Jxlhc67g" org.eventb.core.identifier="queueCounter"/>
<org.eventb.core.variable name="_jQD5cDCjEeK8I7Jxlhc67g" org.eventb.core.comment="queueCounter and reducedResponseCounter to monitor the system state&#10;(workaround as using card() often causes problems with discharging proof obligations)" org.eventb.core.identifier="reducedResponseCounter"/>
<org.eventb.core.variable name="_ed1xgDCsEeK1r57p0SSIEg" org.eventb.core.identifier="attendedIncident"/>
<org.eventb.core.variable name="_ed1xgTCsEeK1r57p0SSIEg" org.eventb.core.comment="lists of incidented which help monitor the status of allocated&#10;incidents --&gt; used for the REPORT events&#10;THIS REFINED MACHINE IMPLEMENTS THE WARNING AND REPORTING REQUIREMENTS" org.eventb.core.identifier="hospitalisedIncident"/>
<org.eventb.core.invariant name="_cGNMwTChEeK8I7Jxlhc67g" org.eventb.core.label="inv8" org.eventb.core.predicate="queueCounter ∈ ℕ"/>
<org.eventb.core.invariant name="_jQD5cTCjEeK8I7Jxlhc67g" org.eventb.core.label="inv9" org.eventb.core.predicate="reducedResponseCounter ∈ ℕ"/>
<org.eventb.core.invariant name="_-crbwDCjEeK8I7Jxlhc67g" org.eventb.core.label="inv10" org.eventb.core.predicate="finite(incident)"/>
<org.eventb.core.invariant name="_ed2YkDCsEeK1r57p0SSIEg" org.eventb.core.label="inv11" org.eventb.core.predicate="attendedIncident ⊆ incident"/>
<org.eventb.core.invariant name="_ed2YkTCsEeK1r57p0SSIEg" org.eventb.core.comment="cannot hospitalise before the scene is attended" org.eventb.core.label="inv12" org.eventb.core.predicate="hospitalisedIncident ⊆  attendedIncident"/>
<org.eventb.core.event name="_u68KqDA_EeKxl_72wEg6Ah" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="INITIALISATION">
<org.eventb.core.action name="_cGNMwjChEeK8I7Jxlhc67g" org.eventb.core.assignment="queueCounter ≔ 0" org.eventb.core.comment="counters init to zero" org.eventb.core.label="act8"/>
<org.eventb.core.action name="_jQEggDCjEeK8I7Jxlhc67g" org.eventb.core.assignment="reducedResponseCounter ≔ 0" org.eventb.core.label="act9"/>
<org.eventb.core.action name="_ed2_oDCsEeK1r57p0SSIEg" org.eventb.core.assignment="attendedIncident ≔ ∅" org.eventb.core.label="act10"/>
<org.eventb.core.action name="_ed3msDCsEeK1r57p0SSIEg" org.eventb.core.assignment="hospitalisedIncident ≔ ∅" org.eventb.core.label="act11"/>
</org.eventb.core.event>
<org.eventb.core.event name="_u68KqDA_EeKxl_72wEg6Ai" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="logIncident">
<org.eventb.core.refinesEvent name="_ZlBNIDDHEeK1r57p0SSIEg" org.eventb.core.target="logIncident"/>
<org.eventb.core.action name="_cGNz0TChEeK8I7Jxlhc67g" org.eventb.core.assignment="queueCounter ≔  queueCounter + 1" org.eventb.core.comment="increment queue size when new incident logged" org.eventb.core.label="act4"/>
</org.eventb.core.event>
<org.eventb.core.event name="_cGPpATChEeK8I7Jxlhc67g" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="fullResponseAllocation">
<org.eventb.core.refinesEvent name="_ZlB0MDDHEeK1r57p0SSIEg" org.eventb.core.target="allocateAmbulanceToIncident"/>
<org.eventb.core.guard name="_cGPpAzChEeK8I7Jxlhc67g" org.eventb.core.label="grd6" org.eventb.core.predicate="incidentCapabilityRequirements(i) ⊆ ambulanceCapabilities(a)"/>
<org.eventb.core.guard name="_cGPpBDChEeK8I7Jxlhc67g" org.eventb.core.label="grd7" org.eventb.core.predicate="queueCounter &gt; 0"/>
<org.eventb.core.action name="_cGQQEDChEeK8I7Jxlhc67g" org.eventb.core.assignment="queueCounter ≔  queueCounter − 1" org.eventb.core.comment="decrement queue size when logged incident is allocated" org.eventb.core.label="act2"/>
</org.eventb.core.event>
<org.eventb.core.event name="_cGQQETChEeK8I7Jxlhc67g" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="reducedResponseAllocation">
<org.eventb.core.refinesEvent name="_ZlCbQDDHEeK1r57p0SSIEg" org.eventb.core.target="allocateAmbulanceToIncident"/>
<org.eventb.core.guard name="_1IHdIDDEEeK1r57p0SSIEg" org.eventb.core.comment="only enable if there are no ambulances that could provide a full&#10;response to any of the allocatable incidents&#10;&#9;@grd6&#9;incidentCapabilityRequirements(i) ⊈ ambulanceCapabilities(a)" org.eventb.core.label="grd6" org.eventb.core.predicate="∀amb · (amb ∈ ambulance ∖ dom(ambulanceAllocation)&#10;  &#9;&#9;&#9;&#9;⇒ ∀inc · (inc ∈ allocatable&#10;  &#9;&#9;&#9;&#9;⇒ incidentCapabilityRequirements(inc) ⊈ ambulanceCapabilities(amb)))"/>
<org.eventb.core.guard name="_cGQ3IDChEeK8I7Jxlhc67g" org.eventb.core.label="grd7" org.eventb.core.predicate="queueCounter &gt; 0"/>
<org.eventb.core.action name="_cGQ3ITChEeK8I7Jxlhc67g" org.eventb.core.assignment="queueCounter ≔  queueCounter − 1" org.eventb.core.comment="decrement queue size when logged incident is allocated" org.eventb.core.label="act2"/>
<org.eventb.core.action name="_jQG8wDCjEeK8I7Jxlhc67g" org.eventb.core.assignment="reducedResponseCounter ≔  reducedResponseCounter + 1" org.eventb.core.comment="increment the reduced response counter" org.eventb.core.label="act3"/>
</org.eventb.core.event>
<org.eventb.core.event name="_u68KqDA_EeKxl_72wEg6Ak" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="allocateIncidentToHospital">
<org.eventb.core.refinesEvent name="_ZlDpYDDHEeK1r57p0SSIEg" org.eventb.core.target="allocateIncidentToHospital"/>
</org.eventb.core.event>
<org.eventb.core.event name="_ed6qATCsEeK1r57p0SSIEg" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="REPORT_IncidentArrival">
<org.eventb.core.parameter name="_ed6qAjCsEeK1r57p0SSIEg" org.eventb.core.identifier="a"/>
<org.eventb.core.guard name="_ed7REDCsEeK1r57p0SSIEg" org.eventb.core.comment="must be an ambulance with an allocated incident" org.eventb.core.label="grd1" org.eventb.core.predicate="a ∈ dom(ambulanceAllocation)"/>
<org.eventb.core.guard name="_ed7RETCsEeK1r57p0SSIEg" org.eventb.core.comment="... that hasn't arrived yet" org.eventb.core.label="grd2" org.eventb.core.predicate="ambulanceAllocation(a) ∉ attendedIncident"/>
<org.eventb.core.action name="_ed7REjCsEeK1r57p0SSIEg" org.eventb.core.assignment="attendedIncident ≔  attendedIncident ∪ {ambulanceAllocation(a)}" org.eventb.core.comment="register arrival to the scene of the incident" org.eventb.core.label="act1"/>
</org.eventb.core.event>
<org.eventb.core.event name="_ed7REzCsEeK1r57p0SSIEg" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="REPORT_HospitalArrival">
<org.eventb.core.parameter name="_ed74IDCsEeK1r57p0SSIEg" org.eventb.core.identifier="a"/>
<org.eventb.core.guard name="_PxpX8DCuEeK1r57p0SSIEg" org.eventb.core.comment="&#9;must be a currently allocated ambulance" org.eventb.core.label="grd1" org.eventb.core.predicate="a ∈ dom(ambulanceAllocation)"/>
<org.eventb.core.guard name="_Pxp_ADCuEeK1r57p0SSIEg" org.eventb.core.comment="cannot arrive before attending the incident scene" org.eventb.core.label="grd2" org.eventb.core.predicate="ambulanceAllocation(a) ∈ attendedIncident"/>
<org.eventb.core.guard name="_Pxp_ATCuEeK1r57p0SSIEg" org.eventb.core.comment="hospital must be allocated" org.eventb.core.label="grd3" org.eventb.core.predicate="{a}◁(ambulanceAllocation;hospitalAllocation) ≠ ∅"/>
<org.eventb.core.guard name="_aFpFYDCwEeK1r57p0SSIEg" org.eventb.core.comment="not yet delivered to hospital" org.eventb.core.label="grd4" org.eventb.core.predicate="ambulanceAllocation(a) ∉ hospitalisedIncident"/>
<org.eventb.core.action name="_aFpscDCwEeK1r57p0SSIEg" org.eventb.core.assignment="hospitalisedIncident ≔ hospitalisedIncident ∪ {ambulanceAllocation(a)}" org.eventb.core.comment="register arrival to the allocated hospital" org.eventb.core.label="act1"/>
</org.eventb.core.event>
<org.eventb.core.event name="_1NY6UTCmEeK1r57p0SSIEg" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="REPORT_AmbulanceBackAtBase">
<org.eventb.core.refinesEvent name="_ZlGFoDDHEeK1r57p0SSIEg" org.eventb.core.target="setAmbulanceAvailable"/>
<org.eventb.core.guard name="_aFpscjCwEeK1r57p0SSIEg" org.eventb.core.comment="ambulance can only arrive back at its base when it has delivered&#10;the patient (incident) to the allocated hospital&#10;Arrival to the base makes the ambulance available for another allocation" org.eventb.core.label="grd3" org.eventb.core.predicate="ambulanceAllocation(a) ∈ hospitalisedIncident"/>
</org.eventb.core.event>
<org.eventb.core.event name="_ed74ITCsEeK1r57p0SSIEg" org.eventb.core.comment="enabled when queue threshold reached" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="WARNING_QueueThresholdReached">
<org.eventb.core.guard name="_ed74IjCsEeK1r57p0SSIEg" org.eventb.core.label="grd1" org.eventb.core.predicate="queueCounter ≥ QUEUE_THRESHOLD"/>
</org.eventb.core.event>
<org.eventb.core.event name="_ed74IzCsEeK1r57p0SSIEg" org.eventb.core.comment="enabled when reduced response threshold exceeded" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="WARNING_ReducedResponseThresholdExceeded">
<org.eventb.core.guard name="_ed8fMDCsEeK1r57p0SSIEg" org.eventb.core.label="grd1" org.eventb.core.predicate="(card(incident) − queueCounter) ∗ REDUCED_RESPONSE_PERCENTAGE_THRESHOLD&#10;  &#9;&#9;&#9;&#9;&lt; reducedResponseCounter ∗ 100"/>
</org.eventb.core.event>
<org.eventb.core.event name="_u68KqDA_EeKxl_72wEg6An" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="addAmbulance">
<org.eventb.core.refinesEvent name="_ZlHTwDDHEeK1r57p0SSIEg" org.eventb.core.target="addAmbulance"/>
</org.eventb.core.event>
<org.eventb.core.event name="_u68KqDA_EeKxl_72wEg6Ao" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="addHospital">
<org.eventb.core.refinesEvent name="_ZlHTwTDHEeK1r57p0SSIEg" org.eventb.core.target="addHospital"/>
</org.eventb.core.event>
</org.eventb.core.machineFile>
