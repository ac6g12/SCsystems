<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.core.machineFile org.eventb.core.configuration="org.eventb.core.fwd" org.eventb.texttools.text_lastmodified="1353587645593" org.eventb.texttools.text_representation="machine ADS sees ctxAmbulance ctxHospital&#10;&#10;variables incident ambulance hospital incidentEmergencyLevel incidentCapabilityRequirements ambulanceAllocation&#10;          hospitalAllocation&#10;          /* BASE OF THE SYSTEM THAT PROVIDES FUNCTIONALITY FOR LOGGING INCIDENTS AND ALLOCATING&#10;             THEM TO AMBULANCES/HOSPITALS */&#10;&#10;invariants&#10;  @incindentType incident ⊆ INCIDENT&#10;  @ambulanceType ambulance ⊆ AMBULANCE&#10;  @hospitalType hospital ⊆ HOSPITAL&#10;  @emergencyLevelType incidentEmergencyLevel ∈ incident→EMERGENCY_LEVEL// each incident must be logged with an emergency level ...&#10;  @incidentCapabilitiesType incidentCapabilityRequirements ∈ incident→ℙ1(MEDICAL_CAPABILITY) // ... and some medical requirements&#10;  @ambulanceAllocationType ambulanceAllocation ∈ ambulance ⤔ incident&#10;  /* ambulacne can be allocated to no more than one inicident at a time&#10;     and at most one ambulance can be allocated to a particular incident */&#10;  @hospitalAllocationType hospitalAllocation ∈ incident ⇸ hospital // at some point incidents should be referred to a hospital&#10;&#10;events&#10;  event INITIALISATION // start with empty sets&#10;    then&#10;      @act1 incident ≔ ∅&#10;      @act2 ambulance ≔ ∅&#10;      @act3 hospital ≔ ∅&#10;      @act4 incidentEmergencyLevel ≔ ∅&#10;      @act5 incidentCapabilityRequirements ≔ ∅&#10;      @act6 ambulanceAllocation ≔ ∅&#10;      @act7 hospitalAllocation ≔ ∅&#10;  end&#10;&#10;  event logIncident&#10;    any i l capabilities&#10;    where&#10;      @iParam i ∈ INCIDENT ∖ incident // incident that is not logged yet&#10;      @lParam l ∈ EMERGENCY_LEVEL// must have an emergency level...&#10;      @capParams capabilities ∈ ℙ1(MEDICAL_CAPABILITY) // ... and require at least one medical capability&#10;      @systemInitialized ambulance ≠ ∅ ∧ hospital ≠ ∅&#10;      /* make sure that the system is initialised with some ambulances&#10;         hospitals before logging incidents */&#10;    then&#10;      @act1 incident ≔ incident ∪ {i}&#10;      @act2 incidentEmergencyLevel(i) ≔ l&#10;      @act3 incidentCapabilityRequirements(i) ≔ capabilities&#10;  end&#10;&#10;  event allocateAmbulanceToIncident&#10;    any i a allocatableIncident&#10;    where&#10;      @filterAllocatableIncident allocatableIncident = {inc ∣ inc ∈ incident ∖ (ran(ambulanceAllocation) ∪ dom(hospitalAllocation)) ∧&#10;            (∃amb · amb ∈ ambulance ∖ dom(ambulanceAllocation) ∧ card(incidentCapabilityRequirements(inc)) ∗&#10;            MIN_REDUCED_RESPONSE_CAPABILITIES&#10;            ≤ (card(ambulanceCapabilities(amb) ∩ incidentCapabilityRequirements(inc)) ∗ 100))}&#10;      /* allocatable is a helper set with all unprocessed logged incidents for which&#10;         there is at least one ambulance (capable of providing a full or reduced response) available */&#10;      @aParam a ∈ ambulance ∖ dom(ambulanceAllocation) // ambulance must be available&#10;      @iParam i ∈ allocatableIncident // incident must be allocatable&#10;      @filterHighestEmergency ∀level·level ∈ incidentEmergencyLevel[allocatableIncident] ⇒ incidentEmergencyLevel(i) ≥ level // process the highest level first&#10;      @filterSufficientCapabilities card(incidentCapabilityRequirements(i)) ∗ MIN_REDUCED_RESPONSE_CAPABILITIES&#10;            ≤ (card(ambulanceCapabilities(a) ∩ incidentCapabilityRequirements(i)) ∗ 100) // make sure that the selected ambulance can handle the request (sufficient medical capabilities)&#10;    then&#10;      @act1 ambulanceAllocation(a) ≔ i&#10;  end&#10;&#10;  event allocateIncidentToHospital&#10;    any i h&#10;    where&#10;      @iParam i ∈ ran(ambulanceAllocation) ∖ dom(hospitalAllocation) // incident with an allocated ambulance but without a hospital&#10;      @hParam h ∈ hospital // any hospital at this stage&#10;    then&#10;      @act1 hospitalAllocation(i) ≔ h&#10;  end&#10;&#10;  event setAmbulanceAvailable&#10;    any a&#10;    where&#10;      @aParam a ∈ dom(ambulanceAllocation) // ambulance must be allocated to an incident&#10;      @aFilter {a}◁(ambulanceAllocation;hospitalAllocation) ≠ ∅&#10;      /* ensure that a hospital has been allocated to the handled incident&#10;         (disregard the notion of patient delivery to hospital for the moment) */&#10;    then&#10;      @act1 ambulanceAllocation ≔  {a} ⩤ ambulanceAllocation&#10;  end&#10;&#10;  event addAmbulance // just to init the system&#10;    any a&#10;    where&#10;      @aParam a ∈ AMBULANCE ∖ ambulance&#10;    then&#10;      @act1 ambulance ≔ ambulance ∪ {a}&#10;  end&#10;&#10;  event addHospital // just to init the system&#10;    any h&#10;    where&#10;      @hParam h ∈ HOSPITAL ∖ hospital&#10;    then&#10;      @act1 hospital ≔ hospital ∪ {h}&#10;  end&#10;end&#10;" version="5">
<org.eventb.core.seesContext name="_hfc0IDSYEeKIHaPt6d5fNA" org.eventb.core.target="ctxAmbulance"/>
<org.eventb.core.seesContext name="_hfdbMDSYEeKIHaPt6d5fNA" org.eventb.core.target="ctxHospital"/>
<org.eventb.core.variable name="_u68KojA_EeKxl_72wEg6Ag" org.eventb.core.identifier="incident"/>
<org.eventb.core.variable name="_u68KozA_EeKxl_72wEg6Ag" org.eventb.core.identifier="ambulance"/>
<org.eventb.core.variable name="_u68KpDA_EeKxl_72wEg6Ag" org.eventb.core.identifier="hospital"/>
<org.eventb.core.variable name="_y99aMDQbEeK2JagZ1s_v9g" org.eventb.core.identifier="incidentEmergencyLevel"/>
<org.eventb.core.variable name="_u68KpjA_EeKxl_72wEg6Ag" org.eventb.core.identifier="incidentCapabilityRequirements"/>
<org.eventb.core.variable name="_u68KpzA_EeKxl_72wEg6Ag" org.eventb.core.identifier="ambulanceAllocation"/>
<org.eventb.core.variable name="_ZPgO8DCtEeK1r57p0SSIEg" org.eventb.core.comment="BASE OF THE SYSTEM THAT PROVIDES FUNCTIONALITY FOR LOGGING INCIDENTS AND ALLOCATING&#10;             THEM TO AMBULANCES/HOSPITALS " org.eventb.core.identifier="hospitalAllocation"/>
<org.eventb.core.invariant name="_CUy48DQqEeK4AKZX5m6UFA" org.eventb.core.label="incindentType" org.eventb.core.predicate="incident ⊆ INCIDENT"/>
<org.eventb.core.invariant name="_CUzgADQqEeK4AKZX5m6UFA" org.eventb.core.label="ambulanceType" org.eventb.core.predicate="ambulance ⊆ AMBULANCE"/>
<org.eventb.core.invariant name="_CU0HEDQqEeK4AKZX5m6UFA" org.eventb.core.label="hospitalType" org.eventb.core.predicate="hospital ⊆ HOSPITAL"/>
<org.eventb.core.invariant name="_CU0uIDQqEeK4AKZX5m6UFA" org.eventb.core.comment="each incident must be logged with an emergency level ..." org.eventb.core.label="emergencyLevelType" org.eventb.core.predicate="incidentEmergencyLevel ∈ incident→EMERGENCY_LEVEL"/>
<org.eventb.core.invariant name="_DPpXoDQqEeK4AKZX5m6UFA" org.eventb.core.comment="... and some medical requirements" org.eventb.core.label="incidentCapabilitiesType" org.eventb.core.predicate="incidentCapabilityRequirements ∈ incident→ℙ1(MEDICAL_CAPABILITY)"/>
<org.eventb.core.invariant name="_FYXXoDQqEeK4AKZX5m6UFA" org.eventb.core.comment="ambulacne can be allocated to no more than one inicident at a time&#10;     and at most one ambulance can be allocated to a particular incident " org.eventb.core.label="ambulanceAllocationType" org.eventb.core.predicate="ambulanceAllocation ∈ ambulance ⤔ incident"/>
<org.eventb.core.invariant name="_HO-7ADQqEeK4AKZX5m6UFA" org.eventb.core.comment="at some point incidents should be referred to a hospital" org.eventb.core.label="hospitalAllocationType" org.eventb.core.predicate="hospitalAllocation ∈ incident ⇸ hospital"/>
<org.eventb.core.event name="'" org.eventb.core.comment="start with empty sets" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="INITIALISATION">
<org.eventb.core.action name="_u68KsDA_EeKxl_72wEg6Ag" org.eventb.core.assignment="incident ≔ ∅" org.eventb.core.label="act1"/>
<org.eventb.core.action name="_u68KsTA_EeKxl_72wEg6Ag" org.eventb.core.assignment="ambulance ≔ ∅" org.eventb.core.label="act2"/>
<org.eventb.core.action name="_u68KsjA_EeKxl_72wEg6Ag" org.eventb.core.assignment="hospital ≔ ∅" org.eventb.core.label="act3"/>
<org.eventb.core.action name="_u68KszA_EeKxl_72wEg6Ag" org.eventb.core.assignment="incidentEmergencyLevel ≔ ∅" org.eventb.core.label="act4"/>
<org.eventb.core.action name="_u68KtDA_EeKxl_72wEg6Ag" org.eventb.core.assignment="incidentCapabilityRequirements ≔ ∅" org.eventb.core.label="act5"/>
<org.eventb.core.action name="_u68KtTA_EeKxl_72wEg6Ag" org.eventb.core.assignment="ambulanceAllocation ≔ ∅" org.eventb.core.label="act6"/>
<org.eventb.core.action name="_u68KtjA_EeKxl_72wEg6Ag" org.eventb.core.assignment="hospitalAllocation ≔ ∅" org.eventb.core.label="act7"/>
</org.eventb.core.event>
<org.eventb.core.event name="_u68KtzA_EeKxl_72wEg6Ag" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="logIncident">
<org.eventb.core.parameter name="_u68KuDA_EeKxl_72wEg6Ag" org.eventb.core.identifier="i"/>
<org.eventb.core.parameter name="_u68KuTA_EeKxl_72wEg6Ag" org.eventb.core.identifier="l"/>
<org.eventb.core.parameter name="_jab2YDQlEeKZRZnaQyo2Tw" org.eventb.core.identifier="capabilities"/>
<org.eventb.core.guard name="_OjDToDQsEeK4AKZX5m6UFA" org.eventb.core.comment="incident that is not logged yet" org.eventb.core.label="iParam" org.eventb.core.predicate="i ∈ INCIDENT ∖ incident"/>
<org.eventb.core.guard name="_OjD6sDQsEeK4AKZX5m6UFA" org.eventb.core.comment="must have an emergency level..." org.eventb.core.label="lParam" org.eventb.core.predicate="l ∈ EMERGENCY_LEVEL"/>
<org.eventb.core.guard name="_OjEhwDQsEeK4AKZX5m6UFA" org.eventb.core.comment="... and require at least one medical capability" org.eventb.core.label="capParams" org.eventb.core.predicate="capabilities ∈ ℙ1(MEDICAL_CAPABILITY)"/>
<org.eventb.core.guard name="_OjFI0DQsEeK4AKZX5m6UFA" org.eventb.core.comment="make sure that the system is initialised with some ambulances&#10;         hospitals before logging incidents " org.eventb.core.label="systemInitialized" org.eventb.core.predicate="ambulance ≠ ∅ ∧ hospital ≠ ∅"/>
<org.eventb.core.action name="_u68KvzA_EeKxl_72wEg6Ag" org.eventb.core.assignment="incident ≔ incident ∪ {i}" org.eventb.core.label="act1"/>
<org.eventb.core.action name="_u68KwDA_EeKxl_72wEg6Ag" org.eventb.core.assignment="incidentEmergencyLevel(i) ≔ l" org.eventb.core.label="act2"/>
<org.eventb.core.action name="_u68KwTA_EeKxl_72wEg6Ag" org.eventb.core.assignment="incidentCapabilityRequirements(i) ≔ capabilities" org.eventb.core.label="act3"/>
</org.eventb.core.event>
<org.eventb.core.event name="_u68KwjA_EeKxl_72wEg6Ag" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="allocateAmbulanceToIncident">
<org.eventb.core.parameter name="_u68KwzA_EeKxl_72wEg6Ag" org.eventb.core.identifier="i"/>
<org.eventb.core.parameter name="_u68KxDA_EeKxl_72wEg6Ag" org.eventb.core.identifier="a"/>
<org.eventb.core.parameter name="_vLIdQDQlEeKZRZnaQyo2Tw" org.eventb.core.identifier="allocatableIncident"/>
<org.eventb.core.guard name="_dpw0EDQsEeK4AKZX5m6UFA" org.eventb.core.comment="allocatable is a helper set with all unprocessed logged incidents for which&#10;         there is at least one ambulance (capable of providing a full or reduced response) available " org.eventb.core.label="filterAllocatableIncident" org.eventb.core.predicate="allocatableIncident = {inc ∣ inc ∈ incident ∖ (ran(ambulanceAllocation) ∪ dom(hospitalAllocation)) ∧&#10;            (∃amb · amb ∈ ambulance ∖ dom(ambulanceAllocation) ∧ card(incidentCapabilityRequirements(inc)) ∗&#10;            MIN_REDUCED_RESPONSE_CAPABILITIES&#10;            ≤ (card(ambulanceCapabilities(amb) ∩ incidentCapabilityRequirements(inc)) ∗ 100))}"/>
<org.eventb.core.guard name="_gtylwDQsEeK4AKZX5m6UFA" org.eventb.core.comment="ambulance must be available" org.eventb.core.label="aParam" org.eventb.core.predicate="a ∈ ambulance ∖ dom(ambulanceAllocation)"/>
<org.eventb.core.guard name="_i5tqwDQsEeK4AKZX5m6UFA" org.eventb.core.comment="incident must be allocatable" org.eventb.core.label="iParam" org.eventb.core.predicate="i ∈ allocatableIncident"/>
<org.eventb.core.guard name="_XGKFEDSYEeKIHaPt6d5fNA" org.eventb.core.comment="process the highest level first" org.eventb.core.label="filterHighestEmergency" org.eventb.core.predicate="∀level·level ∈ incidentEmergencyLevel[allocatableIncident] ⇒ incidentEmergencyLevel(i) ≥ level"/>
<org.eventb.core.guard name="_bbefgDSYEeKIHaPt6d5fNA" org.eventb.core.comment="make sure that the selected ambulance can handle the request (sufficient medical capabilities)" org.eventb.core.label="filterSufficientCapabilities" org.eventb.core.predicate="card(incidentCapabilityRequirements(i)) ∗ MIN_REDUCED_RESPONSE_CAPABILITIES&#10;            ≤ (card(ambulanceCapabilities(a) ∩ incidentCapabilityRequirements(i)) ∗ 100)"/>
<org.eventb.core.action name="_u68KyjA_EeKxl_72wEg6Ag" org.eventb.core.assignment="ambulanceAllocation(a) ≔ i" org.eventb.core.label="act1"/>
</org.eventb.core.event>
<org.eventb.core.event name="_u68KyzA_EeKxl_72wEg6Ag" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="allocateIncidentToHospital">
<org.eventb.core.parameter name="_u68KzDA_EeKxl_72wEg6Ag" org.eventb.core.identifier="i"/>
<org.eventb.core.parameter name="_u68KzTA_EeKxl_72wEg6Ag" org.eventb.core.identifier="h"/>
<org.eventb.core.guard name="_RKoh0DSYEeKIHaPt6d5fNA" org.eventb.core.comment="incident with an allocated ambulance but without a hospital" org.eventb.core.label="iParam" org.eventb.core.predicate="i ∈ ran(ambulanceAllocation) ∖ dom(hospitalAllocation)"/>
<org.eventb.core.guard name="_RKpI4DSYEeKIHaPt6d5fNA" org.eventb.core.comment="any hospital at this stage" org.eventb.core.label="hParam" org.eventb.core.predicate="h ∈ hospital"/>
<org.eventb.core.action name="_u68K0DA_EeKxl_72wEg6Ag" org.eventb.core.assignment="hospitalAllocation(i) ≔ h" org.eventb.core.label="act1"/>
</org.eventb.core.event>
<org.eventb.core.event name="_u17pADCmEeK1r57p0SSIEg" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="setAmbulanceAvailable">
<org.eventb.core.parameter name="_u17pATCmEeK1r57p0SSIEg" org.eventb.core.identifier="a"/>
<org.eventb.core.guard name="_O14Q8DSYEeKIHaPt6d5fNA" org.eventb.core.comment="ambulance must be allocated to an incident" org.eventb.core.label="aParam" org.eventb.core.predicate="a ∈ dom(ambulanceAllocation)"/>
<org.eventb.core.guard name="_O144ADSYEeKIHaPt6d5fNA" org.eventb.core.comment="ensure that a hospital has been allocated to the handled incident&#10;         (disregard the notion of patient delivery to hospital for the moment) " org.eventb.core.label="aFilter" org.eventb.core.predicate="{a}◁(ambulanceAllocation;hospitalAllocation) ≠ ∅"/>
<org.eventb.core.action name="_u18QEDCmEeK1r57p0SSIEg" org.eventb.core.assignment="ambulanceAllocation ≔  {a} ⩤ ambulanceAllocation" org.eventb.core.label="act1"/>
</org.eventb.core.event>
<org.eventb.core.event name="_u68K1TA_EeKxl_72wEg6Ag" org.eventb.core.comment="just to init the system" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="addAmbulance">
<org.eventb.core.parameter name="_u68K1jA_EeKxl_72wEg6Ag" org.eventb.core.identifier="a"/>
<org.eventb.core.guard name="_Lg88gDSYEeKIHaPt6d5fNA" org.eventb.core.label="aParam" org.eventb.core.predicate="a ∈ AMBULANCE ∖ ambulance"/>
<org.eventb.core.action name="_u68K2DA_EeKxl_72wEg6Ag" org.eventb.core.assignment="ambulance ≔ ambulance ∪ {a}" org.eventb.core.label="act1"/>
</org.eventb.core.event>
<org.eventb.core.event name="_u68K2TA_EeKxl_72wEg6Ag" org.eventb.core.comment="just to init the system" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="addHospital">
<org.eventb.core.parameter name="_u68K2jA_EeKxl_72wEg6Ag" org.eventb.core.identifier="h"/>
<org.eventb.core.guard name="_MXBB0DSYEeKIHaPt6d5fNA" org.eventb.core.label="hParam" org.eventb.core.predicate="h ∈ HOSPITAL ∖ hospital"/>
<org.eventb.core.action name="_u68K3DA_EeKxl_72wEg6Ag" org.eventb.core.assignment="hospital ≔ hospital ∪ {h}" org.eventb.core.label="act1"/>
</org.eventb.core.event>
</org.eventb.core.machineFile>
